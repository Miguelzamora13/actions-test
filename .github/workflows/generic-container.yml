name: Generic container
on:
  workflow_dispatch:
  push:
    tags:
      - "*"

permissions: read-all

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # This step builds our image, pushes it, and outputs the repo hash digest.
  build:
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.hash.outputs.digest }}
      sha: ${{ steps.hash.outputs.sha }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.3.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v2.0.0

      - name: Authenticate Docker
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v2.0.0
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # v4.0.1
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # v3.0.0
        id: build
        with:
          context: go/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output digest
        id: hash
        env:
          SHA: ${{ steps.build.outputs.digest }}
        run: |
          # sha output of docker/build-push-action is of the form 'sha256:<digest>'
          sha=$(echo $SHA | cut -d':' -f2)

          # Here we emulate the output of sha256sum and base64 encode it.
          # base64 -w0 encodes to base64 and outputs on a single line.
          digest=$(echo "$sha  $IMAGE_NAME" | base64 -w0)
          echo "::set-output name=digest::$digest"
          echo "::set-output name=sha::$HASH"

  # This step calls the generic workflow to generate provenance.
  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: read
    if: startsWith(github.ref, 'refs/tags/')
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.1.1
    with:
      base64-subjects: "${{ needs.build.outputs.digest }}"

  # This step attaches the provenance to the image in the container registry.
  upload:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Authenticate Docker
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v2.0.0
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v1.9.0" # optional
      - name: Download provenance
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v2.1.0
        with:
          # The provenance step returns an output with the artifact name of
          # our provenance.
          name: ${{needs.provenance.outputs.attestation-name}}
      - name: Upload provenance
        env:
          PROV_NAME: ${{needs.provenance.outputs.attestation-name}}
          IMAGE_TAGS: ${{needs.build.outputs.tags}}
        run: cosign attach attestation --attestation "$PROV_NAME" $(echo "$IMAGE_TAGS" | head -n1)
